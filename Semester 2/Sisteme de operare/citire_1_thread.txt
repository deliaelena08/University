#include<stdio.h>
#include<stdlib.h>
#include<fcntl.h>
#include<unistd.h>
#include<pthread.h>
#define FILE_NAME "asa.txt"

//pt fiecare 2000 se face un thread ptc se cere secvente de 2000
int fd;
int Numere;
int k;
int total;
int suma=0;
int numerediv[40];
unsigned char elemente[80000];
pthread_mutex_t mtx=PTHREAD_MUTEX_INITIALIZER;
void* citire(void* a){
  for(int i=0;i<Numere;i++){
	read(fd,&elemente[i],1);
  }
  close(fd);
  return NULL;
}

void *do_work(void*a){
  int id=*(int*)a;
  free(a);
//printf("%d\n", id);  
  int i=2000*id;
  for(int j=i;j<i+2000;j++){
	if(elemente[j]%k==0){
	  pthread_mutex_lock(&mtx);
//	  printf("%d\n", elemente[j]); sleep(1);
	  numerediv[id]++;
	  pthread_mutex_unlock(&mtx);
	}
   }
  printf("Thread-ul %d are %d numere divizibile cu %d\n",id,numerediv[id],k);
  pthread_mutex_lock(&mtx);
  suma+=numerediv[id];
  pthread_mutex_unlock(&mtx);
  return NULL;
}

int main(int argc,char* argv[]){
  fd=open(FILE_NAME,O_RDONLY);
  if(fd<0){
	perror("Nu s a deschis fisierul");
	exit(EXIT_FAILURE);
  }
  pthread_t tc[1];
  int i=0;
  printf("N:");
  scanf("%d",&Numere);
  printf("K:");
  scanf("%d",&k);
  pthread_create(&tc[0],NULL,citire,&i);
  pthread_join(tc[0],NULL);
  total=Numere/2000;
  pthread_t thr[total];
  for(int i=0;i<total;i++){
	int* id=malloc(sizeof(int));
	*id=i;
	pthread_create(&thr[i],NULL,do_work,id);
  }
  for(int i=0;i<total;i++){
	pthread_join(thr[i],NULL);
  }
  printf("Numarul total de numere divizibile este : %d\n",suma);
  return 0;
}
