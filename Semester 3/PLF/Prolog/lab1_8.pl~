%8a.o lista este multime daca elementele sunt unice
%daca elementul nu exista atunci functia returneaza fals
%unic(L: lista,E: intreg), (i,i)

unic([],_):-!.
unic([H|T],Element):-
	H =\= Element,
	unic(T,Element).
%verificam pentru fiecare element din lista daca este unic
%multime(L: lista), (i)

multime([]):- !.
multime([H|T]):-
	unic(T,H),
	multime(T).

%8b elimina primele 3 aparitii ale unui element
%n_aparitii elimina n aparitii a unui element dat
%n_aparitii(L:lista,E:intreg,N:intreg,Rez:lista), (i,i,i,o)

n_aparitii([],_,_,[]):-!.
n_aparitii(L,_,0,L):- !.
n_aparitii([H|T],Element,N,R):-
	H =:= Element,
	N1 is N-1,
	n_aparitii(T,Element,N1,R).
n_aparitii([H|T],Element,N,[H|R]):-
	H =\= Element,
	n_aparitii(T,Element,N,R).

%apelam functia pentru n=3
%trei_aparitii(L:lista,Element:intreg,Rez:lista), (i,i,o)
trei_aparitii(Lista,Element,Rez):-
	n_aparitii(Lista,Element,3,Rez).
