#from consola import *
#from cheltuiala import *

def print_menu_principal():
    print("1.Adauga cheltuiala")
    print("2.Stergere")
    print("3.Cautari")
    print("4.Raportare")
    print("5.Filtrare")
    print("6.Undo")

def menu_1():
    print("1.1 Adaugă o nouă cheltuială (se specifică ziua, suma, tipul) \n2.1 Actualizează cheltuială (se specifică ziua, suma, tipul) ")

def menu_2():
    print("1.2 Șterge toate cheltuielile pentru ziua data")
    print("2.2 Șterge cheltuielile pentru un interval de timp (se dă ziua de început și sfârșit, se șterg toate cheltuielile pentru perioada dată) ")
    print("3.2 Șterge toate cheltuielile de un anumit tip ")

def menu_3():
    print("1.3 Tipărește toate cheltuielile mai mari decât o sumă data")
    print("2.3 Tipărește toate cheltuielile efectuate înainte de o zi dată și mai mici decât o sumă ")
    print("3.3 Tipareste toate cheltuielile de un anumit tip")
def menu_4():
    print("1.4 Tipărește suma totală pentru un anumit tip de cheltuială")
    print("2.4 Găsește ziua în care suma cheltuită e maximă")
    print("3.4 Tipărește toate cheltuielile ce au o anumită sumă")
    print("4.4 Tipărește cheltuielile sortate după tip")

def menu_5():
    print("1.5 Elimină toate cheltuielile de un anumit tip")
    print("2.5 Elimină toate cheltuielile mai mici decât o sumă dată")

def menu_6():
    print("1.6 Reface ultima operație ")


def adaugare_cheltuiala(cheltuiala_list: list, cheltuiala: dict) -> None:
    """
    Adauga o cheltuiala in lista de cheltuieli
    :param cheltuiala_list: lista de cheltuieli
    :type cheltuiala_list: list
    :param cheltuiala: o cheltuiala de adaugat
    :type cheltuiala: dict
    :return: -; modifica lista prin adaugarea la sfarsit a cheltuielei
    :rtype:none
    """
    cheltuiala_list.append(cheltuiala)

def creare_cheltuiala(cheltuiala_str: str) -> dict:
    """
    :param cheltuiala_str: string care reprezinta cheltuiala facuta
    :type cheltuiala_str: str
    :rtype: dictionar
    :return: cheltuiala data
    """
    ziua,suma,tip = cheltuiala_str.split(',')
    ziua = ziua.strip()
    suma = suma.strip()
    suma= int (suma)
    tip = tip.strip()
    cheltuiala_dict = {'ziua': ziua, 'suma': suma, 'tip': tip}
    return cheltuiala_dict

def adaugare_cheltuieli():
    # ui = user interface/interfata cu utilizatorul
    cheltuiala_str = input('Introduceti detaliile cheltuielii separate print-o virgula:')
    cheltuiala = creare_cheltuiala(cheltuiala_str)
    adaugare_cheltuiala(cheltuiala_list, cheltuiala)
    return cheltuiala


def adaugare_suma_cheltuita(cheltuiala:dict):#,cheltuiala_mancare,cheltuiala_imbracaminte,cheltuiala_altele,cheltuiala_intretinere,cheltuiala_telefon):
    global cheltuiala_mancare, cheltuiala_imbracaminte, cheltuiala_altele, cheltuiala_intretinere, cheltuiala_telefon
    if cheltuiala['tip']=='mancare':
        cheltuiala_mancare+=cheltuiala['suma']
        return cheltuiala_mancare
    if cheltuiala['tip']=='imbracaminte':
        cheltuiala_imbracaminte+=cheltuiala['suma']
        return cheltuiala_imbracaminte
    if cheltuiala['tip'] == 'telefon':
        cheltuiala_telefon += cheltuiala['suma']
        return cheltuiala_telefon
    if cheltuiala['tip']=='intretinere':
        cheltuiala_intretinere+=cheltuiala['suma']
        return cheltuiala_intretinere
    if cheltuiala['tip']=='altele':
        cheltuiala_altele+=cheltuiala['suma']
        return cheltuiala_altele

def adaugare_sume(cheltuiala_list,mancare,telefon,altele,imbracaminte,intretinere):
   # for cheltuiala in cheltuiala_list:
        if cheltuiala['tip'] == 'mancare':
            mancare.append(cheltuiala['suma'])
        if cheltuiala['tip'] == 'imbracaminte':
            imbracaminte.append(cheltuiala['suma'])
        if cheltuiala['tip'] == 'altele':
            altele.append(cheltuiala['suma'])
        if cheltuiala['tip'] == 'telefon':
            telefon.append(cheltuiala['suma'])
        if cheltuiala['tip'] == 'intretinere':
            intretinere.append(cheltuiala['suma'])

def undo(operatie,cheltuieli):
    """
    Functia de do/undo
    :param operatie: lista de operatii
    :param cheltuieli: lista de cheltuieli
    :return: sterge operatia /reface operatia
    """
    if operatie['tip']=='adaugare':
        cheltuieli.remove(operatie['element'])
    if operatie['tip']=='stergere':
        cheltuieli.extend(operatie['elemente'])
def gasire_tip_cheltuiala(type,cheltuiala_list):
    """
    Cauta toate sumele cheltuite de un anumit tip
    :param type: string
    :return: list
    """
    lista_noua=[]
    for c in cheltuiala_list:
        if c['tip']==type:
            lista_noua.append(c)
    return lista_noua

def stergere_cheltuiala_tip(type,cheltuiala_list):
    nr=0
    for i in cheltuiala_list:
        if i['tip']==type:
            cheltuiala_list.pop(nr)
        nr+=1
    return cheltuiala_list

def test():
    mancare=[29]
    type='mancare'
    cheltuiala_list = [{'ziua': "20", 'suma': 29, 'tip': 'mancare'}]
    assert(gasire_tip_cheltuiala('mancare',cheltuiala_list)==cheltuiala_list)
    assert(stergere_cheltuiala_tip(type,cheltuiala_list)==[])

mancare=[]
telefon=[]
altele=[]
imbracaminte=[]
intretinere=[]
cheltuiala_list=[]
cheltuiala=[]
test()
suma_actualizata=0
data_actualizarii=0
tipul_sumei=0
cheltuiala_imbracaminte = 0
cheltuiala_mancare = 0
cheltuiala_telefon = 0
cheltuiala_altele = 0
cheltuiala_intretinere = 0
undo_list=[]
while True:
    print_menu_principal()
    option = input("Introduceti optiune:")
    option = option.strip()
    option = int(option)
    match option:
        case 1:
            menu_1()
            functionalitate=input("Introduceti optiune:")
            functionalitate=functionalitate.strip()
            functionalitate=float(functionalitate)
            match functionalitate:
                case 1.1:
                    cheltuiala=adaugare_cheltuieli()
                    suma_actualizata = adaugare_suma_cheltuita(cheltuiala)
                    adaugare_sume(cheltuiala, mancare, telefon, altele, imbracaminte, intretinere)
                    data_actualizarii = cheltuiala['ziua']
                    tipul_sumei = cheltuiala['tip']
                    print("Cheltuiala a fost adaugata cu succes!")
                    undo_list.append({'tip':'adaugare','element':cheltuiala})
                case 2.1:
                    print("Suma de",suma_actualizata,"pentru",tipul_sumei,"a fost actualizata ultima data pentru data de",data_actualizarii)

        case 2:
            menu_2()
            functionalitate = input("Introduceti optiune:")
            functionalitate = functionalitate.strip()
            functionalitate = float(functionalitate)
            match functionalitate:
                case 1.2:
                    break
                case 2.2:
                    break
                case 3.2:
                    break

        case 3:
            menu_3()
            functionalitate = input("Introduceti optiune:")
            functionalitate = functionalitate.strip()
            functionalitate = float(functionalitate)
            match functionalitate:
                case 1.3:
                    break
                case 2.3:
                    break
                case 3.3:
                    type=input("Introduceti tipul de cheltuaiala pe care sa o afisam: ")
                    print(gasire_tip_cheltuiala(type,cheltuiala_list))


        case 4:
            menu_4()
            functionalitate = input("Introduceti optiune:")
            functionalitate = functionalitate.strip()
            functionalitate = float(functionalitate)
            match functionalitate:
                case 1.4:
                    break
                case 2.4:
                    break
                case 3.4:
                    suma_cautata=int(input("Introduceti suma dorita pentru cautare:"))
                    ok=0
                    for i in cheltuiala_list:
                        if i['suma']==suma_cautata:
                            print(i)
                            ok=1
                       # print(i)
                    if ok==0:
                        print("Nu exista o astfel de suma")
                case 4.4:
                    if(len(gasire_tip_cheltuiala('mancare',cheltuiala_list))>0):
                        print("Cheltuielile pentru mancare sunt:")
                        print(gasire_tip_cheltuiala('mancare',cheltuiala_list))
                    if (len(gasire_tip_cheltuiala('altele', cheltuiala_list)) > 0):
                        print("Cheltuielile pentru altele sunt:")
                        print(gasire_tip_cheltuiala('altele', cheltuiala_list))
                    if (len(gasire_tip_cheltuiala('imbracaminte', cheltuiala_list)) > 0):
                        print("Cheltuielile pentru imbracaminte sunt:")
                        print(gasire_tip_cheltuiala('imbracaminte', cheltuiala_list))
                    if (len(gasire_tip_cheltuiala('intretinere', cheltuiala_list)) > 0):
                        print("Cheltuielile pentru intretinere sunt:")
                        print(gasire_tip_cheltuiala('intretinere', cheltuiala_list))
                    if (len(gasire_tip_cheltuiala('telefon', cheltuiala_list)) > 0):
                        print("Cheltuielile pentru telefon sunt:")
                        print(gasire_tip_cheltuiala('telefon', cheltuiala_list))



        case 5:
            menu_5()
            functionalitate = input("Introduceti optiune:")
            functionalitate = functionalitate.strip()
            functionalitate = float(functionalitate)
            match functionalitate:
                case 1.5:
                    type=input("Introduceti tipul:")
                    stergere_cheltuiala_tip(type,cheltuiala_list)
                    print(cheltuiala_list)
                case 2.5:
                    break
        case 6:
            undo(undo_list.pop(),cheltuiala_list)
            print(cheltuiala_list)