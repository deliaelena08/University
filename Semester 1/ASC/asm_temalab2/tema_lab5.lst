     1                                  ;Se dau 2 siruri de octeti A si B. Sa se construiasca sirul R care sa contina elementele lui B in ordine inversa urmate de elementele impare ale lui A.
     2                                  ;Exemplu:
     3                                  ;A: 2, 1, 3, 3, 4, 2, 6
     4                                  ;B: 4, 5, 7, 6, 2, 1
     5                                  ;R: 1, 2, 6, 7, 5, 4, 1, 3, 3
     6                                  
     7                                  bits 32
     8                                  global start        
     9                                  extern exit               
    10                                  import exit msvcrt.dll    
    11                                  segment data use32 class=data
    12 00000000 02010303040206              a db 2, 1, 3, 3, 4, 2, 6
    13                                      la equ $-a
    14 00000007 040507060201                b db 4, 5, 7, 6, 2, 1
    15                                      lb equ $-b
    16 0000000D 00<rept>                    r times lb+la db 0
    17                                  segment code use32 class=code
    18                                      start:
    19 00000000 B906000000                      mov ecx, lb;punem lungimea in ECX lungimea sirului B
    20 00000005 BE00000000                      mov esi,0;variabila pentru incrementare
    21                                          
    22 0000000A E338                            jecxz Sfarsit
    23                                          Repeta1:
    24 0000000C 8A81[06000000]                      mov al,[b+ecx-1]
    25 00000012 8886[0D000000]                      mov [r+esi],al;adaugam elementele sirului B in ordinea inversa
    26 00000018 46                                  inc esi
    27 00000019 E2F1                            loop Repeta1
    28                                          
    29 0000001B B907000000                      mov ecx, la ;punem lungimea in ECX lungimea sirului Al
    30 00000020 BE00000000                      mov esi,0;variabila pentru incrementare
    31 00000025 BB06000000                      mov ebx,lb;punem in ebx lungimea sirului B
    32                                          Repeta2:
    33 0000002A 8A86[00000000]                      mov al,[a+esi];punem in al primul element din sirul A
    34 00000030 D0D8                                rcr al,1;rotim spre dreapta al, daca este par atunci cf=0 ,cf=1 altfel
    35 00000032 730D                                jae paritate;dcaa numarul e par nu l va adauga in r
    36 00000034 8A86[00000000]                          mov al,[a+esi]
    37 0000003A 8883[0D000000]                          mov [r+ebx],al
    38 00000040 43                                      inc ebx
    39                                              paritate:
    40 00000041 46                                  inc esi
    41 00000042 E2E6                            loop Repeta2
    42                                          Sfarsit:
    43 00000044 6A00                            push    dword 0     
    44 00000046 FF15[00000000]                  call    [exit]       
