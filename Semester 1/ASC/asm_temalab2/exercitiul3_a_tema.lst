     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  ;Cerinta problemei:(a*2)+2*(b-3)-d-2*c
     3                                  ;a-byte
     4                                  ;b-byte
     5                                  ;c-byte
     6                                  ;d-word
     7                                  global start        
     8                                  
     9                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    10                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  segment data use32 class=data
    14 00000000 02                           a db 2
    15 00000001 04                           b db 4
    16 00000002 01                           c db 1
    17 00000003 0300                         d dw 3
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 A0[00000000]                    mov AL,[a];AX=a
    21 00000005 B202                            mov DL, 2; DL=2
    22 00000007 F6E2                            mul DL;AX=AL*DL=a*2
    23 00000009 6689C3                          MOV BX, AX; BX = AX
    24                                          
    25 0000000C A0[01000000]                    mov AL,[b];AL=b
    26 00000011 2C03                            sub AL,3;AL=AL-3=b-3
    27 00000013 B202                            MOV DL, 2; DL =2
    28 00000015 F6E2                            mul DL;AX=AL*DL=2*(b-3)
    29                                          
    30 00000017 6601C3                          add BX,AX;BX=BX+AX=(a*2)+2*(b-3)
    31 0000001A 662B1D[03000000]                sub BX,[d];BX=BX-d=(a*2)+2*(b-3)-d
    32                                          
    33 00000021 A0[02000000]                    mov AL,[c];AL=c
    34 00000026 B202                            MOV DL, 2; DL=2
    35 00000028 F6E2                            mul DL;AX=AL*DL=c*2
    36                                          
    37 0000002A 6629C3                          sub BX,AX;BX=BX-AX=(a*2)+2*(b-3)-d-2*c
    38 0000002D 6689D8                          MOV AX, BX; AX = (a*2)+2*(b-3)-d-2*c
    39                                          ; exit(0)
    40 00000030 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 00000032 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
