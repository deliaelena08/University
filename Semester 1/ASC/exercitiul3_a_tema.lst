     1                                  bits 32
     2                                  
     3                                  global start
     4                                  extern exit
     5                                  import exit msvcrt.dll
     6                                  
     7                                  segment data use32 class=data
     8 00000000 0200                        a dw 2h        ; a - word (16-bit signed)
     9 00000002 01                          b db 1h        ; b - byte (8-bit signed)
    10 00000003 02000000                    c dd 2h        ; c - dword (32-bit signed)
    11 00000007 0100000000000000            x dq 1h        ; x - qword (64-bit signed)
    12                                  
    13                                  segment code use32 class=code
    14                                      start:
    15 00000000 66A1[00000000]                  mov ax, word[a]          
    16 00000006 66F7E8                          imul ax              
    17 00000009 6689C3                          mov bx, ax           
    18 0000000C 6689D1                          mov cx, dx           
    19                                  
    20 0000000F 660FBE05[02000000]              movsx ax, byte [b]  
    21 00000017 6601C3                          add bx, ax           
    22 0000001A 6683D100                        adc cx, 0            
    23                                  
    24 0000001E 6689C8                          mov ax, cx
    25 00000021 6699                            cwd
    26 00000023 89C2                            mov edx,eax
    27 00000025 B800000000                      mov eax,0
    28 0000002A 6689D0                          mov ax,dx
    29 0000002D 6699                            cwd
    30 0000002F 0305[07000000]                  add eax, dword [x]  
    31 00000035 1315[0B000000]                  adc edx, dword [x+4] 
    32                                  
    33 0000003B 0FBE1D[02000000]                movsx ebx, byte [b] 
    34 00000042 01DB                            add ebx, ebx         
    35 00000044 F7FB                            idiv ebx             
    36                                  
    37 00000046 89C3                            mov ebx, eax        
    38 00000048 A1[03000000]                    mov eax, [c]         
    39 0000004D 0FAF05[03000000]                imul eax, dword [c] 
    40                                  
    41 00000054 01D8                            add eax, ebx         
    42 00000056 83D200                          adc edx, 0          
    43                                  
    44 00000059 50                              push eax
    45 0000005A 52                              push edx
    46 0000005B E8(00000000)                    call exit
